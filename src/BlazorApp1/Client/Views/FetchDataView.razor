@page "/fetchdatamvvm"
@using System.Collections.Specialized
@using BlazorApp1.Client.ViewModels
@using LogoFX.Core
@inject IFetchDataViewModel _fetchDataViewModel

<h1>Weather forecast</h1>
<p>This component demonstrates fetching data from the server.</p>
@if (_fetchDataViewModel.WeatherForecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Date</th>
            <th>Temp. (C)</th>
            <th>Temp. (F)</th>
            <th>Summary</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var forecast in _fetchDataViewModel.TypedWeatherForecasts)
        {
            <tr>
                <td>@forecast.Date.ToShortDateString()</td>
                <td>@forecast.TemperatureC</td>
                <td>@forecast.TemperatureF</td>
                <td>@forecast.Summary</td>
            </tr>
        }
        </tbody>
    </table>
}

@functions {
    protected override async Task OnInitializedAsync()
    {
        (_fetchDataViewModel.WeatherForecasts as INotifyCollectionChanged).CollectionChanged += WeakDelegate.From(OnCollectionChanged);
        await _fetchDataViewModel.RetrieveForecastsAsync();
        
    }

    private void OnCollectionChanged(object sender, NotifyCollectionChangedEventArgs e)
    {
        StateHasChanged();
    }
}
